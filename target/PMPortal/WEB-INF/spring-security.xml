<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.1.xsd">
         
       <http pattern="/resources/**" security="none"/>
       <http auto-config='true'>
       	<intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
       	<intercept-url pattern="/logout" access="IS_AUTHENTICATED_ANONYMOUSLY" />
       	<intercept-url pattern="/accessdenied" access="IS_AUTHENTICATED_ANONYMOUSLY" />
       	<intercept-url pattern="/**" access="ROLE_ADMIN" />
       	<!-- <form-login login-page="/login" default-target-url="/main" authentication-failure-url="/accessdenied" /> -->
       	
       	<form-login login-page="/login" 
        			authentication-success-handler-ref="loginSuccessHandler" 
        			authentication-failure-handler-ref="loginFailureHandler" />
       
       	<!-- <session-management>
		   <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management> -->
		<logout  invalidate-session="true" logout-success-url="/login" logout-url="/j_spring_security_logout" delete-cookies="JSESSIONID"/>
	  </http>
	  
	 <!--  <authentication-manager>
	    <authentication-provider>
	      <user-service>
	        <user name="user" password="password" authorities="ROLE_USER" />
	        <user name="admin" password="password" authorities="ROLE_ADMIN,ROLE_USER" />
	      </user-service>
	    </authentication-provider>
	  </authentication-manager>  -->
	   <authentication-manager>
<authentication-provider ref="ldapProvider" />
</authentication-manager>
<beans:bean id="ldapProvider"
  class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
    <beans:constructor-arg value="blr.velankani.com" />
    <beans:constructor-arg value="ldap://s01.blr.velankani.com/" />
  <beans:property name="userDetailsContextMapper" ref="tdrUserDetailsContextMapper"/>
</beans:bean>
 <beans:bean id="tdrUserDetailsContextMapper" class="com.springmvc.ActiveRoleAllocation"/> 
<!-- <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
<beans:constructor-arg value="ldap://s01:636/DC=blr,DC=velankani,DC=com" />
</beans:bean>
 <beans:bean id="ldapProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
<beans:constructor-arg>
<beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
<beans:constructor-arg ref="contextSource" />
<beans:property name="userDnPatterns">
                <beans:list>
                    <beans:value>sAMAccountName={0},cn=Users</beans:value>
                </beans:list>
            </beans:property>
</beans:bean>
</beans:constructor-arg>
<beans:constructor-arg>
<beans:bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator" >
<beans:constructor-arg ref="contextSource" />
 <beans:constructor-arg value="ou=groups" />
 <beans:property name="groupRoleAttribute" value="cn" />
 <beans:property name="convertToUpperCase" value="false" />
 <beans:property name="rolePrefix" value="ROLE_" />
</beans:bean>
</beans:constructor-arg>
</beans:bean> 
<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.LdapShaPasswordEncoder" />  -->

	  <!-- Select users and user_roles from database -->
	<!-- <authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </authentication-provider>
	</authentication-manager> -->
	
	<beans:bean id="loginSuccessHandler" class="com.springmvc.LoginSuccessHandler" />
	 <beans:bean id="loginFailureHandler" class="com.springmvc.LoginFailureHandler" />
	  
</beans:beans>